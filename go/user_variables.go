/* 
 * QuantiModo
 *
 * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do). 
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package swagger

type UserVariables struct {

	// User ID
	User int32 `json:"user,omitempty"`

	// Common variable id
	VariableId int32 `json:"variableId,omitempty"`

	// The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variableâ€™s value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.
	DurationOfAction int32 `json:"durationOfAction,omitempty"`

	// When it comes to analysis to determine the effects of this variable, knowing when it did not occur is as important as knowing when it did occur. For example, if you are tracking a medication, it is important to know when you did not take it, but you do not have to log zero values for all the days when you haven't taken it. Hence, you can specify a filling value (typically 0) to insert whenever data is missing.
	FillingValue int32 `json:"fillingValue,omitempty"`

	// joinWith
	JoinWith string `json:"joinWith,omitempty"`

	// The maximum allowed value for measurements. While you can record a value above this maximum, it will be excluded from the correlation analysis.
	MaximumAllowedValue float32 `json:"maximumAllowedValue,omitempty"`

	// The minimum allowed value for measurements. While you can record a value below this minimum, it will be excluded from the correlation analysis.
	MinimumAllowedValue float32 `json:"minimumAllowedValue,omitempty"`

	// onsetDelay
	OnsetDelay int32 `json:"onsetDelay,omitempty"`

	// Earliest measurement startTime that should be used in analysis. For instance, the date when you started tracking something.  Helpful in determining when to start 0 filling since we can assume the absence of a treatment measurement, for instance, indicates that the treatment was not applied rathter than simply not recorded.  Uses ISO string format
	ExperimentStartTime string `json:"experimentStartTime,omitempty"`

	// Latest measurement startTime that should be used in analysis. For instance, the date when you stopped tracking something.  Helpful in determining when to stop 0 filling since we can assume the absence of a treatment measurement, for instance, indicates that the treatment was not applied rathter than simply not recorded.   Uses ISO string format
	ExperimentEndTime string `json:"experimentEndTime,omitempty"`

	// User-defined display alias for variable name
	Alias string `json:"alias,omitempty"`
}
