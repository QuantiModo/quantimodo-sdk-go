/* 
 * QuantiModo
 *
 * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do). 
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package swagger

import (
	"time"
)

type Connection struct {

	// id
	Id int32 `json:"id,omitempty"`

	// ID of user that owns this correlation
	UserId int32 `json:"userId,omitempty"`

	// The id for the connector data source for which the connection is connected
	ConnectorId int32 `json:"connectorId,omitempty"`

	// Indicates whether a connector is currently connected to a service for a user.
	ConnectStatus string `json:"connectStatus,omitempty"`

	// Error message if there is a problem with authorizing this connection.
	ConnectError string `json:"connectError,omitempty"`

	// Time at which an update was requested by a user.
	UpdateRequestedAt time.Time `json:"updateRequestedAt,omitempty"`

	// Indicates whether a connector is currently updated.
	UpdateStatus string `json:"updateStatus,omitempty"`

	// Indicates if there was an error during the update.
	UpdateError string `json:"updateError,omitempty"`

	// The time at which the connector was last successfully updated.
	LastSuccessfulUpdatedAt time.Time `json:"lastSuccessfulUpdatedAt,omitempty"`

	// When the record was first created. Use UTC ISO 8601 \"YYYY-MM-DDThh:mm:ss\"  datetime format
	CreatedAt time.Time `json:"createdAt,omitempty"`

	// When the record in the database was last updated. Use UTC ISO 8601 \"YYYY-MM-DDThh:mm:ss\"  datetime format
	UpdatedAt time.Time `json:"updatedAt,omitempty"`
}
